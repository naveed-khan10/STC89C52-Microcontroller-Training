C51 COMPILER V9.60.7.0   LCD                                                               10/07/2024 14:17:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD.l
                    -st) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          
   2          #include "LCD.h"
   3          
   4          // Delay function to create a short delay
   5          void delay() {
   6   1          int i, j;
   7   1          for(i = 0; i < 100; i++) {
   8   2              for (j = 0; j < 100; j++);
   9   2          }
  10   1      }
  11          
  12          // Define lcd_delay function to create a delay for LCD timing
  13          void lcd_delay() {
  14   1          delay();
  15   1      }
  16          
  17          // Function to send a command to the LCD
  18          void lcd_cmd(unsigned char cmd) {
  19   1          text = cmd;    // Put the command on the data port
  20   1          rs = 0;            // Select command register (RS=0)
  21   1          rw = 0;            // Select write operation (RW=0)
  22   1          en = 1;            // Generate a high-to-low pulse on the enable pin
  23   1          lcd_delay();       // Wait for the command to be processed
  24   1          en = 0;            // End the enable pulse
  25   1      }
  26          
  27          // Function to send data to the LCD
  28          void lcd_data(unsigned char dat) {
  29   1          text = dat;   // Put the data on the data port
  30   1          rs = 1;            // Select data register (RS=1)
  31   1          rw = 0;            // Select write operation (RW=0)
  32   1          en = 1;            // Generate a high-to-low pulse on the enable pin
  33   1          lcd_delay();       // Wait for the data to be processed
  34   1          en = 0;            // End the enable pulse
  35   1      }
  36          
  37          // Function to initialize the LCD
  38          void lcd_init() {
  39   1          lcd_cmd(0x38);     // Set LCD to 8-bit mode, 2 lines, 5x7 matrix
  40   1          lcd_delay();       // Wait for the command to be processed
  41   1          lcd_cmd(0x0C);     // Display ON, cursor OFF
  42   1          lcd_delay();       // Wait for the command to be processed
  43   1          lcd_cmd(0x06);     // Entry mode, auto increment with no shift
  44   1          lcd_delay();       // Wait for the command to be processed
  45   1          lcd_cmd(0x01);     // Clear the display
  46   1          lcd_delay();       // Wait for the command to be processed
  47   1      }
  48          
  49          // Function to set the cursor position
  50          void lcd_set_cursor(unsigned char row, unsigned char col) {
  51   1          unsigned char pos;
  52   1          if (row == 0)
  53   1              pos = 0x80 + col; // Set cursor position for the first line
  54   1          else if (row == 1)
C51 COMPILER V9.60.7.0   LCD                                                               10/07/2024 14:17:42 PAGE 2   

  55   1              pos = 0xC0 + col; // Set cursor position for the second line
  56   1          lcd_cmd(pos); // Send command to set the cursor position
  57   1      }
  58          
  59          // Function to write data at a specific position
  60          void lcd_write(unsigned char row, unsigned char col, unsigned char dat) {
  61   1          lcd_set_cursor(row, col); // Set cursor to specified position
  62   1          lcd_data(dat);           // Write data at that position
  63   1      }
  64          
  65          // Function to clear the display
  66          void lcd_clear() {
  67   1          lcd_cmd(0x01); // Clear display screen
  68   1          lcd_delay();   // Wait for the command to be processed
  69   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
