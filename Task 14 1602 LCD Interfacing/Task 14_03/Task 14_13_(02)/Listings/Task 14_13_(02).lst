C51 COMPILER V9.60.7.0   TASK_14_13__02_                                                   10/07/2024 14:14:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TASK_14_13__02_
OBJECT MODULE PLACED IN .\Objects\Task 14_13_(02).obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Task 14_13_(02).c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\Task 14_13_(02).lst) TABS(2) OBJECT(.\Objects\Task 14_13_(02).obj)

line level    source

   1          ////////#include <reg51.h>
   2          
   3          ////////// Define the data port for the LCD
   4          ////////#define lcd_data P0
   5          
   6          ////////// Define control pins for the LCD
   7          ////////sbit rs = P2^6;  // Register select pin
   8          ////////sbit rw = P2^5;  // Read/Write pin
   9          ////////sbit en = P2^7;  // Enable pin
  10          
  11          ////////// Function prototypes
  12          ////////void lcd_init();             // Initialize the LCD
  13          ////////void cmd(unsigned char a);   // Send command to the LCD
  14          ////////void dat(unsigned char b);   // Send data to the LCD
  15          ////////void show(unsigned char *s); // Display a string on the LCD
  16          ////////void lcd_delay();            // Delay function for LCD
  17          
  18          ////////// Function to initialize the LCD
  19          ////////void lcd_init()
  20          ////////{
  21          ////////    cmd(0x38); // Initialize the LCD in 8-bit mode, 2 lines, 5x7 matrix
  22          ////////    cmd(0x0e); // Display ON, cursor ON
  23          ////////    cmd(0x01); // Clear display screen
  24          ////////    cmd(0x06); // Entry mode, auto increment with no shift
  25          ////////    cmd(0x0c); // Display ON, cursor OFF
  26          ////////    cmd(0x80); // Set cursor position to the beginning of the first line
  27          ////////}
  28          
  29          ////////// Function to send a command to the LCD
  30          ////////void cmd(unsigned char a)
  31          ////////{
  32          ////////    lcd_data = a; // Send command to data port
  33          ////////    rs = 0;       // Select command register
  34          ////////    rw = 0;       // Write operation
  35          ////////    en = 1;       // Generate enable pulse
  36          ////////    lcd_delay();  // Wait for the command to be processed
  37          ////////    en = 0;       // End enable pulse
  38          ////////}
  39          
  40          ////////// Function to send data to the LCD
  41          ////////void dat(unsigned char b)
  42          ////////{
  43          ////////    lcd_data = b; // Send data to data port
  44          ////////    rs = 1;       // Select data register
  45          ////////    rw = 0;       // Write operation
  46          ////////    en = 1;       // Generate enable pulse
  47          ////////    lcd_delay();  // Wait for the data to be processed
  48          ////////    en = 0;       // End enable pulse
  49          ////////}
  50          
  51          ////////// Function to display a string on the LCD
  52          ////////void show(unsigned char *s)
  53          ////////{
  54          ////////    while(*s) {   // Loop until the end of the string
C51 COMPILER V9.60.7.0   TASK_14_13__02_                                                   10/07/2024 14:14:43 PAGE 2   

  55          ////////        dat(*s++); // Send each character to the LCD
  56          ////////    }
  57          ////////}
  58          
  59          ////////// Delay function for LCD timing
  60          ////////void lcd_delay()
  61          ////////{
  62          ////////    unsigned int lcd_delay;
  63          ////////    for(lcd_delay = 0; lcd_delay <= 6000; lcd_delay++); // Simple delay loop
  64          ////////}
  65          
  66          ////////int main()
  67          ////////{
  68          ////////    unsigned int j;
  69          ////////    lcd_init(); // Initialize the LCD
  70          ////////    while(1) {
  71          ////////        cmd(0x80); // Set cursor position to the beginning of the first line
  72          ////////        show("   Welcome   "); // Display the first line
  73          ////////        cmd(0xc0); // Set cursor position to the beginning of the second line
  74          ////////        show("AbdullahZunorain"); // Display the second line
  75          ////////        for(j = 0; j < 30000; j++); // Delay to keep the message on the screen
  76          ////////        cmd(0x01); // Clear the display
  77          ////////        for(j = 0; j < 30000; j++); // Delay before the next iteration
  78          ////////    }
  79          ////////}
  80          
  81          
  82          
  83          
  84          //________________________________________________________________________________________________________
             -__________________
  85          
  86          
  87          #include "LCD.h"
  88          
  89          int main() {
  90   1          unsigned int j;
  91   1          lcd_init(); // Initialize the LCD
  92   1      
  93   1          while(1) {
  94   2              cmd(0x80); // Set cursor position to the beginning of the first line
  95   2              show("   Welcome   "); // Display the first line
  96   2              cmd(0xc0); // Set cursor position to the beginning of the second line
  97   2              show("Naveed khan"); // Display the second line
  98   2              for(j = 0; j < 30000; j++); // Delay to keep the message on the screen
  99   2              cmd(0x01); // Clear the display
 100   2              for(j = 0; j < 30000; j++); // Delay before the next iteration
 101   2          }
 102   1      }
 103          
 104          
 105          
 106          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   TASK_14_13__02_                                                   10/07/2024 14:14:43 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
