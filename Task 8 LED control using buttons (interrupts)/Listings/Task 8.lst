C51 COMPILER V9.60.7.0   TASK_8                                                            03/19/2024 10:41:59 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TASK_8
OBJECT MODULE PLACED IN .\Objects\Task 8.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Task 8.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Ta
                    -sk 8.lst) TABS(2) OBJECT(.\Objects\Task 8.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          // LED
   4          sbit led1 = P2^0; 
   5          sbit led2 = P2^1; 
   6          sbit led3 = P2^2; 
   7          sbit led4 = P2^3; 
   8          
   9          // Button
  10          sbit btn1 = P3^1; 
  11          sbit btn2 = P3^0; 
  12          sbit btn3 = P3^2;
  13          sbit btn4 = P3^3; 
  14          
  15          void MSDelay(unsigned int);
  16          void btn3_ISR() interrupt 0
  17          {
  18   1          if(btn3 == 0) // Button pressed
  19   1          {
  20   2              MSDelay(50); // Delay for debouncing
  21   2              if(btn3 == 0) // Check button state again after debouncing
  22   2              {
  23   3                  led3 = ~led3; // Toggle LED3 state
  24   3                  while(btn3 == 0); // Wait until button is released
  25   3              }
  26   2          }
  27   1      }
  28          void btn4_ISR() interrupt 2
  29          {
  30   1          if(btn4 == 0) // Button pressed
  31   1          {
  32   2              MSDelay(50); // Delay for debouncing
  33   2              if(btn4 == 0) // Check button state again after debouncing
  34   2              {
  35   3                  led4 = ~led4; // Toggle LED3 state
  36   3                  while(btn4 == 0); // Wait until button is released
  37   3              }
  38   2          }
  39   1      }
  40          void main()
  41          {
  42   1            // Enable interrupt for btn3
  43   1          EA = 1; // Enable global interrupt
  44   1          EX0 = 1; // Enable external interrupt 0
  45   1          EX1 = 1;
  46   1        
  47   1          while(1)
  48   1          {
  49   2              // Check button K1 state
  50   2              if(btn1 == 0) // Button pressed
  51   2              {
  52   3                  MSDelay(50); // Delay for debouncing
  53   3                  if(btn1 == 0) // Check button state again after debouncing
  54   3                  {
C51 COMPILER V9.60.7.0   TASK_8                                                            03/19/2024 10:41:59 PAGE 2   

  55   4                      led1 = ~led1; // Toggle LED1 state
  56   4                      while(btn1 == 0); // Wait until button is released
  57   4                  }
  58   3              }
  59   2      
  60   2              // Check button K2 state
  61   2              if(btn2 == 0)
  62   2              {
  63   3                  MSDelay(50);
  64   3                  if(btn2 == 0)
  65   3                  {
  66   4                      led2 = ~led2; // Toggle LED2 state
  67   4                      while(btn2 == 0);
  68   4                  }
  69   3              }
  70   2          }
  71   1      }
  72          
  73          void MSDelay(unsigned int itime) {
  74   1          unsigned int i, j;
  75   1          for(i = 0; i < itime; i++) {
  76   2              for(j = 0; j < 114; j++);
  77   2          }
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
